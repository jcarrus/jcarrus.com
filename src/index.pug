include utils

doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport', content='width=device-width, initial-scale=1')
    meta(http-equiv='X-UA-Compatible', content='IE=edge')
    meta(name='description', content='Justin Carrus\'s Personal Website')
    title Justin Carrus Personal Website
    link(rel='stylesheet', href='/style.css')
    link(rel='stylesheet', href='https://fonts.googleapis.com/css2?family=Crimson+Text:ital,wght@0,400;0,700;1,400&family=Lato:wght@300;700&display=swap')
  body
    main(class='page')
      img.profile-pic(width='300' height='300' src='/assets/profile.jpg' alt='Photo of Justin Carrus')
      h1.center Justin Carrus
      .intro
        p Welcome! I love thoughtful products, people on a mission, and the magic of technology. I've made this site as a list of
        ul
          li #[a(href='#projects') projects I've worked on],
          li #[a(href='#reading-list') writing/media I've enjoyed], and
          li #[a(href='#stuff-i-like') stuff I like]
        p I really enjoy personal websites that offer glimpses into the lives of others and this is my attempt at such a portrait.
        p If you have recommendations or questions, feel free to #[a(href='mailto:carrus.justin@gmail.com') reach out].
      .filters
        input#filterText(oninput='filter()', placeholder='Filter items...')
        .chips
          +chip('project', 'Project')
          +chip('book', 'Book')
          +chip('stuff', 'Stuff')
          +chip('leisure', 'Leisure')
          +chip('entrepreneurship', 'Entrepreneurship')
          +chip('writing', 'Writing')
          +chip('history', 'History')
          +chip('youtube', 'Youtube')
      #content.hidden
        .section
          h2#projects Projects
          div
            include projects.pug
        .section
          h2#reading-list Reading List / Media
          div
            include reading-list.pug
        .section
          h2#stuff-i-like Stuff I Like
          div
            include stuff-i-like.pug
        #empty-state.hidden
          .empty-state No results. Try removing some filters.
    script(src='/clipboard.min.js')
    script new ClipboardJS('.clip');
    script(async src="https://www.googletagmanager.com/gtag/js?id=UA-43008439-4")
    script(src='/lazysizes.min.js' async)
    script
      | window.dataLayer = window.dataLayer || [];
      | function gtag(){dataLayer.push(arguments);}
      | if (window.location.protocol === 'https:') {
      |   gtag('js', new Date());
      |   gtag('config', 'UA-43008439-4');
      | }
      |
      | function track(label) {
      |   if(window.location.protocol === 'https:') {
      |     gtag('event', 'click', { event_category: 'engagement', event_label: label })
      |   }
      | }
      | 
      | function copyHandler(id) { 
      |   const e = document.getElementById(`${id}-copy-alert`)
      |   e.classList.remove('hidden')
      |   setTimeout(() => e.classList.add('hidden'), 3000)
      |   track(id)
      | }
      | 
      | function onChipClick(tag) { 
      |   document.getElementById(tag).classList.toggle('active')
      |   filter()
      | }
      |
      | function filter() {
      |   const filterText = document.getElementById('filterText').value
      |   const tags = Array.from(document.getElementsByClassName('chip active')).map(e => e.id)
      |   window.history.pushState(
      |     null, 
      |     document.title, 
      |     `${window.location.origin}/?filter=${filterText}&tags=${tags.join()}`
      |   )
      |   Array.from(document.getElementsByClassName('item'))
      |     .forEach(e => { 
      |       if (
      |         new RegExp(filterText, 'i').test(e.innerText.replaceAll('Copied!', '')) &&
      |         (tags.length === 0 || tags.every(t => e.getElementsByClassName(`tag ${t}`).length > 0))
      |       ) {
      |         e.classList.remove('hidden')
      |       } else {
      |         e.classList.add('hidden')
      |       }
      |     })
      |   Array.from(document.getElementsByClassName('section'))
      |     .forEach(e => { 
      |       if (e.querySelector('.item:not(.hidden)')) {
      |         e.classList.remove('hidden')
      |       } else {
      |         e.classList.add('hidden')
      |       }
      |     })
      |   const emptyState = document.getElementById('empty-state')
      |   if (document.getElementsByClassName('section hidden').length === 3) {
      |     emptyState.classList.remove('hidden')
      |   } else {
      |     emptyState.classList.add('hidden')
      |   }
      | }
      |
      | window.onload = () => {
      |   if (window.location.search === '') return
      |   const params = new URLSearchParams(window.location.search)
      |   document.getElementById('filterText').value = params.get('filter')
      |   const tags = params.get('tags')
      |   tags && tags.split(',').forEach(t => document.getElementById(t).classList.add('active'))
      |   filter()
      |   document.getElementById('content').classList.remove('hidden')
      | }